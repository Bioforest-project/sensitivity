# Dummy {.unnumbered}

```{r set}
#| message: false
#| warning: false
library(tidyverse)
library(entropart)
library(cmdstanr)
```

```{r data}
#| message: false
#| warning: false
diversity <- c("data/raw_data/data_cleaned_paracou.csv",
  "data/raw_data/data_cleaned_mbaiki.csv") %>% 
  read_csv() %>% 
  subset(!is.na(genus_cleaned)) %>%
  group_by(Site, Plot, Year, genus_cleaned) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(Site, Plot, Year) %>%
  summarise(
    diversity = Diversity(count,
      q = 1, SampleCoverage = 0.9,
      Correction = "None")
  )
ba <- c("data/raw_data/data_cleaned_paracou.csv",
  "data/raw_data/data_cleaned_mbaiki.csv") %>% 
  read_csv() %>% 
  group_by(Site, Plot, Year) %>% 
  summarise(ba = sum(pi*(diameter_cor/200)^2))
forest <- left_join(diversity, ba) %>%
  rename_all(tolower) %>% 
  ungroup() %>% 
  mutate(rel_year = year - 1986) %>% 
  mutate(sitenum = as.numeric(as.factor(site))) %>% 
  mutate(plot = as.character(plot)) %>% 
  left_join(read_tsv("data/raw_data/metadata.tsv"))
data_equ <- forest %>%
  filter((rel_year <= 0 & treatment == "Logging") | treatment == "Control") %>%
  mutate(plotnum = as.numeric(as.factor(paste(site, plot))))
ind_equ <- data_equ %>%
    select(site, plot, sitenum, plotnum) %>%
    unique()
data_rec <- forest %>%
  filter(treatment == "Logging", rel_year > 2) %>%
  mutate(plotnum = as.numeric(as.factor(paste0(site, "_", plot))))
ind_rec <- data_rec %>%
    select(site, plot, sitenum, plotnum) %>%
    unique()
```

```{r data-fig}
#| message: false
#| warning: false
forest %>% 
  select(site, plot, rel_year, ba, diversity) %>% 
  gather(variable, value, -site, -plot, -rel_year) %>% 
  ggplot(aes(rel_year, value, col = plot)) +
  geom_line() +
  geom_point() +
  facet_grid(variable ~ site, scales = "free_y") +
  theme_bw() +
  scale_color_discrete(guide = "none") +
  geom_vline(xintercept = 0)
```

```{r equ}
#| eval: false
equilibirum <- cmdstan_model("models/equilibirum.stan")
mdata <- list(
    n_obs = nrow(data_equ),
    n_site = max(data_equ$sitenum),
    n_plot = max(data_equ$plotnum),
    ba = data_equ$ba,
    y = data_equ$diversity,
    site = data_equ$sitenum,
    plot = data_equ$plotnum
)
fit <- equilibirum$sample(
    mdata,
    chains = 4,
    parallel_chains = 4,
    save_warmup = FALSE,
    refresh = 100,
    output_dir = "chains/equ/"
)
```

```{r equ-res}
#| message: false
#| warning: false
fit <- as_cmdstan_fit(list.files("chains/equ/", full.names = TRUE))
mu <- fit$summary(c("mu", "muba")) %>% 
  separate(variable, c("variable", "sitenum"), convert = TRUE) %>% 
  mutate(variable = recode(variable, "mu" = "diversity", "muba" = "ba")) %>% 
  left_join(ind_equ %>% distinct(sitenum, site))
knitr::kable(mu)
```

```{r rec}
#| eval: false
recovery <- cmdstan_model("models/recovery.stan")
mdata <- list(
    n = nrow(data_rec),
    s = max(data_rec$sitenum),
    p = max(data_rec$plotnum),
    ba = data_rec$ba,
    y = data_rec$diversity,
    t = data_rec$rel_year - 3,
    site = data_rec$sitenum,
    plot = data_rec$plotnum,
    site_plot = ind_rec$sitenum,
    mu_ba_theta_s = filter(mu, variable == "ba")$median,
    sigma_ba_theta_s = filter(mu, variable == "ba")$sd,
    mu_theta_s = filter(mu, variable == "diversity")$median,
    sigma_theta_s = filter(mu, variable == "diversity")$sd
)
fit <- recovery$sample(
    mdata,
    chains = 4,
    parallel_chains = 4,
    save_warmup = FALSE,
    refresh = 100,
    output_dir = "chains/rec/"
)
```

```{r rec-fit}
#| message: false
#| warning: false
fit <- as_cmdstan_fit(list.files("chains/rec/", full.names = TRUE))
fit$time() %>% 
  knitr::kable()
```

```{r rec-res}
#| message: false
#| warning: false
gamma <- fit$summary("gamma_s")
knitr::kable(gamma)
```
