[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sensitivity",
    "section": "",
    "text": "Introduction\nsensitivity is â€¦"
  },
  {
    "objectID": "01_plots.html#paracou",
    "href": "01_plots.html#paracou",
    "title": "Plots",
    "section": "Paracou",
    "text": "Paracou\nParacou plots are 6.25-ha 250x250m plots, we subdivided them into 4-ha, 2-ha, 1-ha, 0.5-ha and 0.25-ha.\n\n\nCode\nparacou &lt;- \"data/raw_data/data_cleaned_paracou.csv\" %&gt;% \n  read_csv() %&gt;% \n  rename_all(tolower) %&gt;% \n  rename(x = xtreeplot, y = ytreeplot) %&gt;% \n  # 6.25-ha\n  mutate(plot_625 = plot) %&gt;% \n  select(site, plot, idtree, x, y, plot_625) %&gt;% \n  unique() %&gt;% \n  # 4-ha\n  mutate(subx = ifelse(x &lt;= 200, x, NA),\n         suby = ifelse(y &lt;= 200, y, NA)) %&gt;% \n  rowwise() %&gt;% \n  mutate(plot_400 = ifelse(!is.na(subx) && !is.na(suby),\n                           paste0(plot_625, \"_1\"), NA)) %&gt;% \n  # 2-ha\n  mutate(plot_200 = ifelse(subx &gt; 100, paste0(plot_400, \"_2\"), \n                          paste0(plot_400, \"_1\"))) %&gt;% \n  mutate(subx = ifelse(subx &gt; 100, subx-100, subx)) %&gt;% \n  # 1-ha\n  mutate(plot_100 = ifelse(suby &gt; 100, paste0(plot_200, \"_2\"), \n                           paste0(plot_200, \"_1\"))) %&gt;% \n  mutate(suby = ifelse(suby &gt; 100, suby-100, suby)) %&gt;% \n  # 0.5-ha\n  mutate(plot_050 = ifelse(subx &gt; 50, paste0(plot_100, \"_2\"), \n                          paste0(plot_100, \"_1\"))) %&gt;% \n  mutate(subx = ifelse(subx &gt; 50, subx-50, subx)) %&gt;% \n  # 0.25-ha\n  mutate(plot_025 = ifelse(suby &gt; 50, paste0(plot_050, \"_2\"),\n                          paste0(plot_050, \"_1\"))) %&gt;% \n  mutate(suby = ifelse(suby &gt; 50, suby-50, suby)) %&gt;% \n  select(-subx, -suby) %&gt;% \n  mutate(across(c(\"plot_200\", \"plot_100\", \"plot_050\", \"plot_025\"),\n                ~ ifelse(is.na(plot_400), NA, .))) %&gt;% \n  gather(area, subplot, -site, -plot, -idtree, -x, -y) %&gt;% \n  separate(area, c(\"x1\", \"area\"), convert = TRUE) %&gt;% \n  select(-x1) %&gt;% \n  mutate(area = area/100)\nwrite_tsv(paracou, \"data/derived_data/paracou_subplots.tsv\")\n\n\n\n\nCode\nread_tsv(\"data/derived_data/paracou_subplots.tsv\") %&gt;% \n  filter(plot == 1) %&gt;% \n  ggplot(aes(x, y, col = subplot)) +\n  geom_point() +\n  facet_wrap(~ paste0(area, \"-ha\")) +\n  scale_color_discrete(guide = \"none\") +\n  theme_bw() +\n  xlab(\"\") + ylab(\"\")\n\n\n\n\n\nParacou sub-plots divisions."
  },
  {
    "objectID": "01_plots.html#mbaiki",
    "href": "01_plots.html#mbaiki",
    "title": "Plots",
    "section": "Mbaiki",
    "text": "Mbaiki\nMbaiki plots are 4-ha 200x200m plots, we subdivided them into 2-ha, 1-ha, 0.5-ha, and 0.25-ha.\n\n\nCode\nmbaiki &lt;- \"data/raw_data/data_cleaned_mbaiki.csv\" %&gt;% \n  read_csv() %&gt;% \n  rename_all(tolower) %&gt;% \n  rename(x = xtreeplot, y = ytreeplot) %&gt;% \n  # 4-ha\n  mutate(plot_400 = plot) %&gt;% \n  select(site, plot, idtree, x, y, plot_400) %&gt;% \n  unique() %&gt;% \n  mutate(subx = x, suby = y) %&gt;% \n  # 2-ha\n  mutate(plot_200 = ifelse(subx &gt; 100, paste0(plot_400, \"_2\"), \n                          paste0(plot_400, \"_1\"))) %&gt;% \n  mutate(subx = ifelse(subx &gt; 100, subx-100, subx)) %&gt;% \n  # 1-ha\n  mutate(plot_100 = ifelse(suby &gt; 100, paste0(plot_200, \"_2\"), \n                           paste0(plot_200, \"_1\"))) %&gt;% \n  mutate(suby = ifelse(suby &gt; 100, suby-100, suby)) %&gt;% \n  # 0.5-ha\n  mutate(plot_050 = ifelse(subx &gt; 50, paste0(plot_100, \"_2\"), \n                          paste0(plot_100, \"_1\"))) %&gt;% \n  mutate(subx = ifelse(subx &gt; 50, subx-50, subx)) %&gt;% \n  # 0.25-ha\n  mutate(plot_025 = ifelse(suby &gt; 50, paste0(plot_050, \"_2\"),\n                          paste0(plot_050, \"_1\"))) %&gt;% \n  mutate(suby = ifelse(suby &gt; 50, suby-50, suby)) %&gt;% \n  select(-subx, -suby) %&gt;% \n  gather(area, subplot, -site, -plot, -idtree, -x, -y) %&gt;% \n  separate(area, c(\"x1\", \"area\"), convert = TRUE) %&gt;% \n  select(-x1) %&gt;% \n  mutate(area = area/100)\nwrite_tsv(mbaiki, \"data/derived_data/mbaiki_subplots.tsv\")\n\n\n\n\nCode\nread_tsv(\"data/derived_data/mbaiki_subplots.tsv\") %&gt;% \n  filter(plot == 11) %&gt;% \n  ggplot(aes(x, y, col = subplot)) +\n  geom_point() +\n  facet_wrap(~ paste0(area, \"-ha\")) +\n  scale_color_discrete(guide = \"none\") +\n  theme_bw() +\n  xlab(\"\") + ylab(\"\")\n\n\n\n\n\nMbaiki sub-plots divisions."
  },
  {
    "objectID": "01_plots.html#trajectories",
    "href": "01_plots.html#trajectories",
    "title": "Plots",
    "section": "Trajectories",
    "text": "Trajectories\n\n\nCode\nparacou &lt;- read_csv(\"data/raw_data/data_cleaned_paracou.csv\") %&gt;% \n  rename_all(tolower) %&gt;% \n  select(site, year, idtree, genus_cleaned, diameter_cor)\nmbaiki &lt;- read_csv(\"data/raw_data/data_cleaned_mbaiki.csv\") %&gt;% \n  rename_all(tolower) %&gt;% \n  select(site, year, idtree, genus_cleaned, diameter_cor)\nraw &lt;- bind_rows(\n  read_tsv(\"data/derived_data/paracou_subplots.tsv\"),\n  read_tsv(\"data/derived_data/mbaiki_subplots.tsv\")\n) %&gt;% \n  select(area, site, plot, subplot, idtree) %&gt;%\n  left_join(bind_rows(paracou, mbaiki), relationship = \"many-to-many\") %&gt;% \n  filter(!is.na(subplot))\ndiversity &lt;- raw %&gt;% \n  subset(!is.na(genus_cleaned)) %&gt;%\n  group_by(site, area, plot, subplot, year, genus_cleaned) %&gt;%\n  summarise(count = n(), .groups = \"drop\") %&gt;%\n  group_by(site, area, plot, subplot, year) %&gt;%\n  summarise(\n    diversity = Diversity(count,\n      q = 1, SampleCoverage = 0.9,\n      Correction = \"None\")\n  )\nba &lt;- raw %&gt;% \n  group_by(site, area, plot, subplot, year) %&gt;% \n  summarise(ba = sum(pi*(diameter_cor/200)^2))\nforest &lt;- left_join(diversity, ba) %&gt;%\n  mutate(rel_year = year - 1986) %&gt;% \n  group_by(area) %&gt;% \n  mutate(sitenum = as.numeric(as.factor(site))) %&gt;% \n  mutate(plot = as.character(plot)) %&gt;% \n  left_join(read_tsv(\"data/raw_data/metadata.tsv\"))\nwrite_tsv(forest, \"data/derived_data/data.tsv\")\ndata_equ &lt;- forest %&gt;%\n  group_by(area) %&gt;% \n  filter((rel_year &lt;= 0 & treatment == \"Logging\") | treatment == \"Control\") %&gt;%\n  mutate(subplotnum = as.numeric(as.factor(paste(site, subplot))))\nwrite_tsv(data_equ, \"data/derived_data/data_equ.tsv\")\nind_equ &lt;- data_equ %&gt;%\n    select(area, site, plot, subplot, sitenum, subplotnum) %&gt;%\n    unique()\ndata_rec &lt;- forest %&gt;%\n  filter(treatment == \"Logging\", rel_year &gt; 2) %&gt;%\n  mutate(subplotnum = as.numeric(as.factor(paste0(site, \"_\", subplot))))\nwrite_tsv(data_rec, \"data/derived_data/data_rec.tsv\")\nind_rec &lt;- data_rec %&gt;%\n    select(area, site, plot, subplot, sitenum, subplotnum) %&gt;%\n    unique()\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;% \n  ggplot(aes(rel_year, diversity, col = subplot)) +\n  geom_line() +\n  geom_point() +\n  facet_grid(site ~ paste0(area, \"-ha\"), scales = \"free_y\") +\n  theme_bw() +\n  scale_color_discrete(guide = \"none\") +\n  geom_vline(xintercept = 0) +\n  xlab(\"\") +\n  ylab(expression(\"Genus diversity\" ~ q == 1))\n\n\n\n\n\nDiversity trajectories.\n\n\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;% \n  mutate(rel_year = year - 1986) %&gt;% \n  ggplot(aes(rel_year, ba, col = subplot)) +\n  geom_line() +\n  geom_point() +\n  facet_grid(site ~ paste0(area, \"-ha\"), scales = \"free_y\") +\n  theme_bw() +\n  scale_color_discrete(guide = \"none\") +\n  geom_vline(xintercept = 0) +\n  xlab(\"\") +\n  ylab(expression(\"BA [\" ~ m^2 ~ m^{\n  -2\n} ~ \"]\"))\n\n\n\n\n\nBasal area trajectories."
  },
  {
    "objectID": "02_fits.html#equilibrium",
    "href": "02_fits.html#equilibrium",
    "title": "Fits",
    "section": "Equilibrium",
    "text": "Equilibrium\n\n\nCode\nareas &lt;- c(6.25, 4.00, 2.00, 1.00, 0.50, 0.25)\nequilibirum &lt;- cmdstan_model(\"models/equilibirum.stan\")\nfor(a in areas){\n  data_eq &lt;- read_tsv(\"data/derived_data/data_equ.tsv\") %&gt;% \n  filter(area == a)\n  mdata &lt;- list(\n    n_obs = nrow(data_eq),\n    n_site = max(data_eq$sitenum),\n    n_plot = max(data_eq$subplotnum),\n    ba = data_eq$ba,\n    y = data_eq$diversity,\n    site = data_eq$sitenum,\n    plot = data_eq$subplotnum\n  )\n  dir &lt;- file.path(\"chains\", paste0(\"equ\", \"_\", a*100))\n  unlink(dir, recursive = TRUE)\n  dir.create(dir)\n  fit &lt;- equilibirum$sample(\n    mdata,\n    chains = 4,\n    parallel_chains = 4,\n    save_warmup = FALSE,\n    refresh = 100,\n    output_dir = dir\n    )\n}\n\n\n\n\nCode\ndata_eq &lt;- read_tsv(\"data/derived_data/data_equ.tsv\")\nind_eq &lt;- data_eq %&gt;%\n    select(area, site, plot, subplot, sitenum, subplotnum) %&gt;%\n    unique()\nfits &lt;- tibble(area = c(6.25, 4.00, 2.00, 1.00, 0.50, 0.25)) %&gt;% \n  mutate(directory = file.path(\"chains\", paste0(\"equ\", \"_\", area*100))) %&gt;% \n  rowwise() %&gt;% \n  mutate(files = list(list.files(directory, full.names = TRUE))) %&gt;% \n  mutate(fit = list(as_cmdstan_fit(files)))\nmu &lt;- fits %&gt;% \n  mutate(mu = list(fit$summary(c(\"mu\", \"muba\")))) %&gt;% \n  select(area, mu) %&gt;% \n  unnest(mu) %&gt;% \n  separate(variable, c(\"variable\", \"sitenum\"), convert = TRUE) %&gt;% \n  mutate(variable = recode(variable, \"mu\" = \"diversity\", \"muba\" = \"ba\")) %&gt;% \n  left_join(ind_eq %&gt;% distinct(area, sitenum, site))\nwrite_tsv(mu, \"data/derived_data/mu_equ.tsv\")\ntime &lt;- fits %&gt;% \n  mutate(time = list(fit$time()[[2]])) %&gt;% \n  select(area, time) %&gt;% \n  unnest(time)\nwrite_tsv(time, \"data/derived_data/time_equ.tsv\")\n\n\n\n\nCode\nread_tsv(\"data/derived_data/time_equ.tsv\") %&gt;% \n  ggplot(aes(paste0(area, \"-ha\"), total)) +\n  geom_boxplot() +\n  theme_bw() +\n  xlab(\"\") + ylab(\"Time [ s ]\") +\n  scale_y_log10()\n\n\n\n\n\nDuration equlibirum model.\n\n\n\n\n\n\nCode\nread_tsv(\"data/derived_data/mu_equ.tsv\") %&gt;% \n  select(area, site, variable, median,sd, q5, q95) %&gt;% \n  na.omit() %&gt;% \n  ggplot(aes(paste0(area, \"-ha\"), median)) +\n  geom_segment(aes(y = median - sd, yend = median + sd)) +\n  geom_segment(aes(y = q5, yend = q95), size = .3) +\n  geom_point() +\n  facet_grid(variable ~ site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") + ylab(\"\")\n\n\n\n\n\nEqulibirum values."
  },
  {
    "objectID": "02_fits.html#recovery",
    "href": "02_fits.html#recovery",
    "title": "Fits",
    "section": "Recovery",
    "text": "Recovery\n\n\nCode\nareas &lt;- c(6.25, 4.00, 2.00, 1.00, 0.50, 0.25)\nrecovery &lt;- cmdstan_model(\"models/recovery.stan\")\nfor(a in areas){\n  data_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\") %&gt;% \n  filter(area == a)\n  ind_rec &lt;- data_rec %&gt;%\n    select(area, site, plot, subplot, sitenum, subplotnum) %&gt;%\n    unique()\n  mu &lt;- read_tsv(\"data/derived_data/mu_equ.tsv\") %&gt;% \n  filter(area == a)\n  mdata &lt;- list(\n    n = nrow(data_rec),\n    s = max(data_rec$sitenum),\n    p = max(data_rec$subplotnum),\n    ba = data_rec$ba,\n    y = data_rec$diversity,\n    t = data_rec$rel_year - 3,\n    site = data_rec$sitenum,\n    plot = data_rec$subplotnum,\n    site_plot = ind_rec$sitenum,\n    mu_ba_theta_s = filter(mu, variable == \"ba\")$median,\n    sigma_ba_theta_s = filter(mu, variable == \"ba\")$sd,\n    mu_theta_s = filter(mu, variable == \"diversity\")$median,\n    sigma_theta_s = filter(mu, variable == \"diversity\")$sd\n    )\n  dir &lt;- file.path(\"chains\", paste0(\"rec\", \"_\", a*100))\n  unlink(dir, recursive = TRUE)\n  dir.create(dir)\n  fit &lt;- recovery$sample(\n    mdata,\n    chains = 4,\n    parallel_chains = 4,\n    save_warmup = FALSE,\n    refresh = 100,\n    output_dir = dir\n    )\n}\n\n\n\n\nCode\ndata_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\")\nind_rec &lt;- data_rec %&gt;%\n    select(area, site, plot, subplot, sitenum, subplotnum) %&gt;%\n    unique()\nfits &lt;- tibble(area = c(6.25, 4.00, 2.00, 1.00, 0.50, 0.25)) %&gt;% \n  mutate(directory = file.path(\"chains\", paste0(\"rec\", \"_\", area*100))) %&gt;% \n  rowwise() %&gt;% \n  mutate(files = list(list.files(directory, full.names = TRUE))) %&gt;% \n  mutate(fit = list(as_cmdstan_fit(files)))\ntime &lt;- fits %&gt;% \n  mutate(time = list(fit$time()[[2]])) %&gt;% \n  select(area, time) %&gt;% \n  unnest(time)\nwrite_tsv(time, \"data/derived_data/time_rec.tsv\")\ngamma &lt;- fits %&gt;% \n  mutate(gamma = list(fit$summary(\"gamma_s\"))) %&gt;% \n  select(area, gamma) %&gt;% \n  unnest(gamma) %&gt;% \n  separate(variable, c(\"variable\", \"s\", \"sitenum\"), convert = TRUE) %&gt;% \n  left_join(ind_rec %&gt;% distinct(area, sitenum, site)) %&gt;% \n  select(-s)\nwrite_tsv(gamma, \"data/derived_data/gamma_rec.tsv\")\n\n\n\n\nCode\nread_tsv(\"data/derived_data/time_rec.tsv\") %&gt;% \n  ggplot(aes(paste0(area, \"-ha\"), total/60)) +\n  geom_boxplot() +\n  theme_bw() +\n  xlab(\"\") + ylab(\"Time [ m ]\") +\n  scale_y_log10()\n\n\n\n\n\nDuration recovery model.\n\n\n\n\n\n\nCode\nread_tsv(\"data/derived_data/gamma_rec.tsv\") %&gt;% \n  select(area, site, variable, median,sd, q5, q95) %&gt;% \n  na.omit() %&gt;% \n  ggplot(aes(paste0(area, \"-ha\"), median, col = site)) +\n  geom_hline(yintercept = 0, col = \"darkgrey\") +\n  geom_segment(aes(y = median - sd, yend = median + sd),\n               position = position_nudge(x = c(-0.1, 0.1))) +\n  geom_segment(aes(y = q5, yend = q95), size = .3,\n               position = position_nudge(x = c(-0.1, 0.1))) +\n  geom_point(position = position_nudge(x = c(-0.1, 0.1))) +\n  theme_bw() +\n  xlab(\"\") + \n  scale_y_reverse(expression(gamma~\"[\"~\"%\"~\"%\"^{-1}~\"]\")) +\n  scale_color_discrete(\"\") +\n  theme(legend.position = c(0.2, 0.8))\n\n\n\n\n\nEqulibirum values."
  }
]